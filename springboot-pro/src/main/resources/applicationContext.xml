<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--Set get方法注入-->
    <bean id="test" class="com.alan.demo.utils.spring.Entity.Student">
        <property name="age" value="123"></property>
        <property name="name" value="alan"></property>
    </bean>

    <!--构造方法注入-->
    <bean id="test1" class="com.alan.demo.utils.spring.Entity.Student">
        <constructor-arg value="456"></constructor-arg>
        <constructor-arg value="jack"></constructor-arg>
        <constructor-arg ref="teacher"></constructor-arg>
    </bean>

    <!--处理ref 的引用 和 处理list map 集合-->
    <bean id="teacher" class="com.alan.demo.utils.spring.Entity.Teacher">
        <property name="name" value="小张老师"></property>
        <property name="cls">
            <list>
                <value>A</value>
                <value>B</value>
                <value>C</value>
            </list>
        </property>
        <property name="bossMap">
            <map>
                <!--一个entry代表一个键值对-->
                <entry>
                    <key>
                        <value>10001</value>
                    </key>
                    <value>老师的领导小王</value>
                </entry>

                <entry>
                    <key>
                        <value>10002</value>
                    </key>
                    <value>老师的领导小高</value>
                </entry>
            </map>
        </property>
    </bean>


    <!--采用工厂的方式生成bean-->
    <bean id="factory" class="com.alan.demo.utils.spring.factoryBean.MyFactory"></bean>


    <!--验证bean的生命周期-->
    <bean id="person" class="com.alan.demo.utils.spring.Entity.Person" init-method="init" destroy-method="destory">
        <property name="name" value="小王"></property>
        <property name="sex" value="男"></property>
    </bean>

    <!--验证bean的自动装配-->
    <bean id="dept" class="com.alan.demo.utils.spring.Entity.Dept" autowire="byName">
        <property name="eid" value="001"></property>
        <property name="name" value="小李"></property>
    </bean>

    <bean id="car" class="com.alan.demo.utils.spring.Entity.Car">
        <property name="cid" value="002"></property>
        <property name="band" value="宝马"></property>
    </bean>


    <!--配置自动扫描的包-->
    <!--基于注解的情况实现AOP  利用ASpectJ-->
    <!--    <context:component-scan base-package="com.alan.demo.utils.spring.AOP3"></context:component-scan>-->

    <!--    &lt;!&ndash; 使Aspject 注解起作用: 自动为匹配的类生成代理对象&ndash;&gt;-->
    <!--    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>-->

</beans>